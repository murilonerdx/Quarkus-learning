# Configuration file
# key = value


# configurações do datasource.
# Drivers que podem ser nativos: H2, mariaDB e postgres e desde versao 23 mysql. Existe client MongoDB
# Poderia estar no persistence.xml, mas a documentação oficial sugere que utilize este arquivo
quarkus.datasource.url = jdbc:postgresql://localhost:5432/postgres
quarkus.datasource.driver = org.postgresql.Driver
quarkus.datasource.username = postgres
quarkus.datasource.password = 12345


# Opções disponíveis: none (utilizado para produção, juntamente com a extensão Flyway), create, drop-and-create, drop, update
# executar ./mvnw quarkus:dev -Dquarkus.profile=dev

%dev.quarkus.hibernate-orm.database.generation= drop-and-create
%dev.quarkus.hibernate-orm.sql-load-script = import-dev.sql

quarkus.jaeger.service-name=aprenda-quarkus
#const(1 = rastreia todas as requisições, 0 = não rastreia ), probabilistic (0.2 = 20% das requisições são rastreadas)
#ratelimiting (2 = rastrea no maximo 2 transacoes por segundo), remote (configuração será feita em um agent)
quarkus.jaeger.sampler-type=const
#todas as requisicoes serão rastreadas
quarkus.jaeger.sampler-param=1
quarkus.jaeger.endpoint=http://localhost:14268/api/traces


quarkus.rest-client.municipios-api.url=https://stage.code.quarkus.io/api
quarkus.rest-client.municipios-api.scope=javax.inject.Singleton
quarkus.rest-client.ufs-api.url=https://stage.code.quarkus.io/api
quarkus.rest-client.ufs-api.scope=javax.inject.Singleton
